@model OferteViewModel;

<div class="container" style="background-color: #f2f4f5;">
    <div class="row g-1 mt-4 mb-5 mx-2" >
        <div class="col-sm-12 col-md-6">
            <input type="search" class="searchBar" placeholder="Search" aria-label="Search"
                aria-describedby="search-addon" id="searchBox"/>
        </div>
        <div class="col-sm-12 col-md-4">
            <div class="dropdown-custom" data-dropdown>
                <button class="btn searchBarButton" data-dropdown-button id="countyDropdownButton" > Toata Romania </button>      
                
                <div class="dropdown-custom-menu" style="width: 200px">
                    <div >
                        @Html.DropDownList("Toata Romania", new SelectList(new List<string>()), "Toata Romania", new { @class="form-control", @id="countyDropDown", @onchange = "changeCounty()"})
                        @Html.DropDownList("Localitate", new SelectList(new List<string>()), "Toate Localitatile", new {@class="form-control mt-2", @id="cityDropDown", @onchange = "changeCity()"})
                    </div>
                </div>
            </div>
        </div>

        <div class="col-sm-12 col-md-2 mx-auto">
            <button type="submit" class="btn btn-outline-custom" id="searchButton" >Cautare</button>
        </div>
    </div>

</div>

<div class="container">
        <div class="row g-2 mx-1">
            <div class="col-6 col-md-3">
                <label class="ms-1" >Categorie</label>
                @Html.DropDownList("Orice Categorie", new SelectList( @Model.Categories ), "Orice Categorie", new { @class = "form-control", @id = "categoryTextBox" } )    
            </div>

            <div class="col-6 col-md-3">
                <label class="ms-1" >Pret</label>
                <div class="row">
                    <div class="col">
                        <input class="form-control " placeholder="De la" id="minPriceTextBox">
                    </div>
                    
                    <div class="col" style="margin-left: -20px">
                        <input class="form-control " placeholder="Pana la" id="maxPriceTextBox" >  
                    </div>
                </div>
            </div>

            <div class="col-6 cold-md-2">
                <button class="btn btn-custom mt-4" id="filterButton" > Filtreaza </button>
            </div>
        </div>
        <hr>
        <div class="row">
            <div class="col-4" style="margin-left: 5px;">
                <label> Sorteaza dupa </label>
                <div class="sort-dropdown" data-sort-dropdown>
                    <button id="sortDropdownButton" data-sort-dropdown-button  > Aleatoriu </button>
                    <div class="sort-dropdown-menu">
                        <label> Aleatoriu </label>
                        <label> Ieftine </label>
                        <label> Scumpe </label>
                    </div>
                </div>
            </div>
            <div class="col-2  mb-5">
                <button class="btn btn-custom mt-4" style="margin-left: -15px" id="sortButton" > Sorteaza </button>
            </div>
        </div>
</div>

<script>

    sortButton.addEventListener("click", () => 
    {
        var button = document.getElementById("sortDropdownButton");

        var url = window.location.href;
        
        var param2 = "sortMethod=";
        if ( button.innerHTML.includes("Ieftin") )
            param2 = param2 + "price_asc"  
        if ( button.innerHTML.includes("Scump") )
            param2= param2 + "price_desc"
        if ( button.innerHTML.includes("Aleatoriu") )
            param2 = param2 + "random"

        if ( url.includes("sortMethod=random") )
        {
            url = url.replace("sortMethod=random", param2);
        }
        else if ( url.includes("sortMethod=price_asc") )
        {
            url = url.replace("sortMethod=price_asc", param2);
        }
        else if ( url.includes("sortMethod=price_desc") )
        {
            url = url.replace("sortMethod=price_desc", param2);
        }

        else
            url += "&" + param2;

        location.href = url;
    })

    document.addEventListener("click", e => 
    {
        const isSortDropdownButton = e.target.matches("[data-sort-dropdown-button]") 
        if ( isSortDropdownButton )
        {
            e.target.closest("[data-sort-dropdown]").classList.toggle("active");
        }
        
        const isDropdownOption = e.target.matches(".sort-dropdown-menu label")
        if ( isDropdownOption )
        {    
            var clickedLabel = e.target.closest("label");
            var dropDownButton = document.getElementById("sortDropdownButton")
            dropDownButton.innerHTML = clickedLabel.innerText;
        }

        if ( !isSortDropdownButton )
        {
            document.querySelectorAll("[data-sort-dropdown].active").forEach( dropdown => 
            {
                dropdown.classList.remove("active");
            })
        }


    })


</script>

<style>
    .sort-dropdown
    {
        position: relative;
    }

    .sort-dropdown button
    {

        width: 100%;
        text-align: start;
        padding: .375rem 0 .375rem .75rem;
        font-size: 1rem;
        border: 1px solid #ced4da;
        background-color: white;
        color: black;
        border-radius: .25rem;
    }

    .sort-dropdown-menu label
    {
        display: block;
        font-size: 1rem;
        padding: .375rem 0 .375rem .75rem;
    }

    .sort-dropdown-menu label:hover
    {
        background-color: #002f34;
        color: white;
    }

    .sort-dropdown-menu
    {
        position: absolute;
        left: 0;
        top: calc(100%);
        background-color: white;
        border: 1px solid #ced4da;
        border-radius: .5rem;
        opacity: 0;
        z-index: 9;
        width: 100%;
        transform: translateY(-10%);
        transition: all .125s linear;
        pointer-events: none;
    }

    .sort-dropdown.active > button + .sort-dropdown-menu
    {
        opacity: 1;
        transform: translateY(0);
        pointer-events: auto;
    }


</style>

<div class="container-fluid mt-2" style="background-color: #f2f4f5;">
    <div class="container g-1" style="background-color: #f2f4f5;">
        <div class="row" style="background-color: #f2f4f5;">
            @if (@Model.Anunturi != null && @Model.Anunturi.Count > 0)
            {
                @if ( @Model.anunturiCount == 1 )
                {
                    <h3 class="mt-3"> Am gasit un rezultat pentru tine </h3>
                }
                else if ( @Model.anunturiCount < 1000 )
                {
                    <h3 class="mx-1"> Am gasit @Model.anunturiCount de rezultate pentru tine </h3>
                }
                else
                {
                    <h3 class="mx-1"> Am gasit peste 1000 de rezultate pentru tine </h3>
                }
                @foreach (var anunt in @Model.Anunturi)
                {
                    <div class="col-12 col-md-6 col-lg-3 py-2" style="background-color: #f2f4f5;">
                        <div class="card border-0">
                            
                            <a asp-action="Index" asp-controller="Oferta" asp-route-id="@anunt.Id">
                                <div class="ratio ratio-4x3">
                                    <img class="card-img-top px-3 pt-3" src="" data-id="@anunt.Id">
                                </div>
                            </a>
                            
                            <div class="card-body">
                                <div style="height: 65px" >
                                    <p class="text-dark px-1">@anunt.Title</p>

                                </div>
                                <p class="text-muted px-1 mt-2" style="font-size: small;"> @anunt.County - @anunt.Date.ToShortDateString() </p>
                                <p class="px-1 " style="font-weight: bold"> @anunt.Price Lei </p>
                            </div>

                        </div>
                    </div>
                }
            }
            else
            {
                <h4 style="mx-1 text-dark"> Nu exista anunturi disponibile </h4>
            }
            <div class="pager" >
                
                <label class="pageLabel" id="prevPage"> &lt; </label>
                
                @if ( Model.pageIndex == 3 )
                {
                    <button class="pageButton" data-id="1" id="pageButton" > 1 </button>
                }  
                @if ( Model.pageIndex > 3 )
                {
                    <button class="pageButton" data-id="1" id="pageButton" > 1 </button>
                    <label> ... </label>
                }
                @for ( int i=Model.pageIndex-1; i < Model.pageIndex; i++ )
                {
                    if ( i > 0 )
                    {
                        <button class="pageButton" data-id="@i" id="pageButton" > @i </button>
                    }
                }
                
                <button class="pageButton active" data-id="@Model.pageIndex"> @Model.pageIndex </button>
                
                @for ( int i=Model.pageIndex+1; i<=Model.pageIndex+1; i++ )
                {
                    @if ( i < Model.pageCount )
                    {
                        <button class="pageButton" data-id="@i" id="pageButton" > @i </button>
                    }
                }    
                @if ( @Model.pageIndex+2 < @Model.pageCount )
                {
                    <label> ... </label>
                    <button class="pageButton" data-id="@Model.pageCount" id="pageButton" > @Model.pageCount </button>
                }
                @if ( @Model.pageIndex+2 >= @Model.pageCount )
                {
                    @if ( Model.pageIndex < Model.pageCount )  
                    {
                        <button class="pageButton" data-id="@Model.pageCount" id="pageButton" > @Model.pageCount </button>
                    }
                }
            

                
                <label class="pageLabel" id="nextPage"> > </label>
                
            </div>
        </div>
    </div>
</div>




@section Scripts
{
    <script>
        function changeCounty()
        {
            dropDownButton.text(countyDropdown.val())
        }

        function changeCity()
        {
            dropDownButton.text(dropDownButton.text()+ ", " + cityDropDown.val())
            document.querySelectorAll("[data-dropdown].active").forEach( dropdown =>
            {
                dropdown.classList.remove("active")
            })
        }

        var dropDownButton = $("#countyDropdownButton")
        var countyDropdown = $("#countyDropDown")
        var cityDropDown = $("#cityDropDown");
        var searchButton = $("#searchButton");
        var searchBox = $("#searchBox");
        var filterButton = $("#filterButton");

        var pageCount = @Html.Raw(Json.Serialize(@Model.pageCount))
        const currentPageIndex = @Html.Raw(Json.Serialize(@Model.pageIndex))

        function loadFilters()
        {
            var url = "http://localhost:5064/api/location/counties";
            $.get(url, function(data)
            {
                $.each(data, function(index)
                {
                    countyDropdown.append("<option>"+ data[index] +"</option>");
                })
            })
            
            
            <!-- Filters -->
            var q = @Html.Raw(Json.Serialize(Model.Filters.q))
            var city = @Html.Raw(Json.Serialize(Model.Filters.City))
            var county = @Html.Raw(Json.Serialize(Model.Filters.County))
            var minPrice = @Html.Raw(Json.Serialize(Model.Filters.minPrice))
            var maxPrice = @Html.Raw(Json.Serialize(Model.Filters.maxPrice))
            var category = @Html.Raw(Json.Serialize(Model.Filters.Category))
            
            searchBox.val(q);
            if ( minPrice != 0 )
                $("#minPriceTextBox").val(minPrice);
            if ( maxPrice != 1000000000 )
                $("#maxPriceTextBox").val(maxPrice);
            if ( category != "" )
                $("#categoryTextBox").val(category);
            if ( county != "" )
                dropDownButton.val(county);

            var url = window.location.search;
            var urlParams = new URLSearchParams(url);

            var sortMethod = "Aleatoriu"
            if ( urlParams.get("sortMethod") == "price_asc") 
                sortMethod = "Ieftine"
                
            if ( urlParams.get("sortMethod") == "price_desc" )
                sortMethod = "Scumpe"
            
            document.getElementById("sortDropdownButton").innerHTML = sortMethod;
        }

        document.addEventListener("click", (e) => 
        {
            if ( e.target.matches("#pageButton") )
            {
                var clickedButton = e.target.closest("#pageButton")
                var href = location.href;

                var param1 = "pageIndex="+currentPageIndex;
                var param2 = "pageIndex="+clickedButton.innerText
                href = href.replace(param1, param2)
                
                location.href = href;
            }
            if ( e.target.matches(".pageLabel") )
            {
                var page = currentPageIndex;
                var clickedLabel = e.target.closest(".pageLabel")
                if ( clickedLabel.id == "nextPage" )
                    page++;
                if ( clickedLabel.id == "prevPage" )
                    page--;
            
                var param1 = "pageIndex="+currentPageIndex;
                var param2 = "pageIndex="+page;
                
                location.href = location.href.replace(param1, param2);
            }

        })

        window.addEventListener("load", () => 
        {
            loadFilters();
            if ( !location.href.includes("pageIndex") )
                location.href += "&pageIndex=1"
            
            if ( currentPageIndex == 1 )
            {
                document.getElementById("prevPage").classList.add("hidden")
            }
            if ( currentPageIndex == pageCount )
            {
                document.getElementById("nextPage").classList.add("hidden")
            }

            console.log("Fully loaded")
        })

        @foreach (var anunt in Model.Anunturi)
        {
            <text>
                var id = @Html.Raw(Json.Serialize(@anunt.Id))
                var image = @Html.Raw(Json.Serialize(@anunt.Image))

                var parameter = '[data-id="' + id + '"]'
                var img = document.querySelector(parameter)
                img.src = "data:image/png;base64," + image

            </text>
        }



        var model = @Html.Raw(Json.Serialize(Model));

        document.addEventListener("click", e => 
        { 
            const isDropDownButton = e.target.matches("[data-dropdown-button]")
            if ( !isDropDownButton && e.target.closest("[data-dropdown]") != null ) return;

            let currentDropDown;
            if ( isDropDownButton )
            {
            currentDropDown = e.target.closest("[data-dropdown]");
            currentDropDown.classList.toggle("active");
            }

            document.querySelectorAll("[data-dropdown].active").forEach( dropdown =>
            {
                if ( dropdown == currentDropDown ) return;
                dropdown.classList.remove("active")
            })
        })


        
        filterButton.on("click", function()
            {
                var category =  $("#categoryTextBox").val();
                var minPrice = $("#minPriceTextBox").val();
                var maxPrice = $("#maxPriceTextBox").val();
                
                var url = "/Oferte/index";

                if ( category != "" )
                {
                    url = url + "?categorie=" + category;
                }
                else
                {
                    url += "?categorie= ";
                }
                if ( searchBox.val() != "" && searchBox.val() != null )
                {
                    url = url + "&q=" + searchBox.val();
                }
                if ( minPrice != "" )
                {
                    url =  url + "&minPrice=" + minPrice;
                }
                if ( maxPrice != "" )
                {
                    url = url + "&maxPrice=" + maxPrice;
                }
                if ( countyDropdown.val() != "Toata Romania" && countyDropdown.val() != "" )
                {
                    url += "&county=" + countyDropdown.val();
                }

                location.href = url;
            });  

        $(document).ready(function()
        {
            
            countyDropdown.on("change", function()
            {
                cityDropDown.empty();
                cityDropDown.append("<option>"+ "Toate Localitatile" +"</option>");
                var url1 = "http://localhost:5064/api/location/GetAuto/" + countyDropdown.val();                
                $.get(url1, function(data)
                {
                    var auto = String(data);
                    var url = "http://localhost:5064/api/location/cities/" + auto;
                    $.get(url, function(data)
                    {
                        $.each(data, function(index)
                        {
                            cityDropDown.append("<option>" + data[index] + "</option>")
                        })
                    }) 
                });
            })

            searchButton.on("click", function()
            {
                if ( searchBox.val() != "" || countyDropdown.val() != "Toata Romania" )
                {
                    var url = "/Oferte/Index?q=" + searchBox.val();
                    if ( countyDropdown.val() != "Toata Romania" && countyDropdown.val() != "" )
                    {
                        url += "&county=" + countyDropdown.val();
                    }
                    if ( cityDropDown.val() != "Toate Localitatile" )
                    {
                        url += "&city=" + cityDropDown.val();
                    }
                    location.href = url;
                }
            });
        });

    </script>
}